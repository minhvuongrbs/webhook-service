// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.20.0

package da_generated

import (
	"database/sql/driver"
	"encoding/json"
	"fmt"
	"time"
)

type WebhookStatus string

const (
	WebhookStatusActive   WebhookStatus = "active"
	WebhookStatusInactive WebhookStatus = "inactive"
)

func (e *WebhookStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = WebhookStatus(s)
	case string:
		*e = WebhookStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for WebhookStatus: %T", src)
	}
	return nil
}

type NullWebhookStatus struct {
	WebhookStatus WebhookStatus `json:"webhook_status"`
	Valid         bool          `json:"valid"` // Valid is true if WebhookStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullWebhookStatus) Scan(value interface{}) error {
	if value == nil {
		ns.WebhookStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.WebhookStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullWebhookStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.WebhookStatus), nil
}

type Webhook struct {
	ID        string        `json:"id"`
	Status    WebhookStatus `json:"status"`
	PartnerID string        `json:"partner_id"`
	// metadata of webhook: name, post_url,...
	Metadata  json.RawMessage `json:"metadata"`
	CreatedAt time.Time       `json:"created_at"`
	UpdatedAt time.Time       `json:"updated_at"`
}
